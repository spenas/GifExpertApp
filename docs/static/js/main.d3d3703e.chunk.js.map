{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","image","GifExpertApp","categories","categoria","ReactDOM","render","document","getElementById"],"mappings":"2MAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAC3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAWA,OACI,sBAAMC,SANW,SAACC,GACpBA,EAAEC,iBACFN,GAAc,SAAAO,GAAI,OAAKL,GAAL,mBAAoBK,OACtCJ,EAAc,KAGZ,SACE,uBAAOK,KAAK,OAAOC,MAAOP,EAAYQ,SAXlB,SAACL,GACzBF,EAAcE,EAAEM,OAAOF,a,+BCPdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,0FAEmEC,UAAWH,GAF9E,sBAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVnB,kBAcZM,GAdY,4CAAH,sDCCPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGvC,OACE,sBAAKc,UAAU,yCAAf,UACE,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAMA,SCJCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SACxB,ECF0B,SAAEA,GAC5B,MAA0BZ,mBAAS,CACjCmB,KAAM,GACNa,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATEC,qBAAU,WACVxB,EAASC,GACNwB,MAAM,SAAAC,GAAI,OAAIH,EAAS,CACpBf,KAAMkB,EACNL,SAAS,SAEd,CAAEpB,IAGEqB,EDbyBK,CAAc1B,GAAjCyB,EAAb,EAAQlB,KAAYa,EAApB,EAAoBA,QAGpB,OACE,qCACE,6BAAKpB,IAEHoB,GAAW,wCACb,qBAAKJ,UAAU,YAAf,SACGS,EAAKhB,KAAI,SAACkB,GAAD,OACR,cAAC,EAAD,eAAgCA,GAAdA,EAAMhB,aEYnBiB,EAvBM,WACnB,MAAoCxC,mBAAS,CAAC,cAA9C,mBAAOyC,EAAP,KAAmB1C,EAAnB,KAMA,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BACG0C,EAAWpB,KAAI,SAACqB,GAAD,OACd,cAAC,EAAD,CAEA9B,SAAU8B,GADJA,YCdhBC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.d3d3703e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from 'prop-types'\n\n\nexport const AddCategory = ({setCategories}) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setCategories(cats => [inputValue, ...cats] );\n    setInputValue('');\n  };\n  return (\n      <form onSubmit={ handleSubmit }>\n        <input type=\"text\" value={inputValue} onChange={handleInputChange} />\n      </form>\n  );\n};\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n} ","\nexport const getGifs = async (category) => {\n    const url =\n      `https://api.giphy.com/v1/gifs/search?api_key=FaS7A6sBoHDHa5awQwcLZOXl6V3ZnxMo&q=${ encodeURI( category )}&limit=10`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map((img) => {\n      return {\n        id: img.id,\n        title: img.title,\n        url: img.images?.downsized_medium.url,\n      };\n    });\n\n    return gifs;\n  };","import React from 'react'\n\nexport const GifGridItem = ( {id, title, url} ) => {\n\n\n  return (\n    <div className=\"card animate__animated animate__fadeIn\">\n      <img src={ url } alt={ title }/>\n      <p> { title }</p>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\nimport { GifGridItem } from \"./GifGridItem\";\n\nexport const GifGrid = ({ category }) => {\n  const { data:imgs , loading } = useFetchGifs( category );\n\n\n  return (\n    <>\n      <h3>{category}</h3>\n\n      { loading && <p>Loading</p> }\n      <div className=\"card-grid\">\n        {imgs.map((image) => (\n          <GifGridItem key={image.id} {...image} />\n        ))}\n      </div>\n    </>\n  );\n};\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = ( category ) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true\n  });\n\n    useEffect(() => {\n    getGifs( category )\n      .then( imgs => setState({\n          data: imgs,\n          loading: false,\n      }));\n  }, [ category ]);\n\n\n  return state;\n}","import React, { useState } from \"react\";\nimport { AddCategory } from \"./components/AddCategory\";\nimport { GifGrid } from \"./components/GifGrid\";\n\nconst GifExpertApp = () => {\n  const [categories, setCategories] = useState([\"One Punch\"]);\n\n  // const handleAdd = () => {\n  //   setCategorias([...categorias, 'Saint Seiya'])\n  // }\n\n  return (\n    <>\n      <h2>GifExpertApp</h2>\n      <AddCategory setCategories={setCategories} />\n      <hr />\n      <ol>\n        {categories.map((categoria) => (\n          <GifGrid \n          key={ categoria }\n          category={categoria} />\n))}\n      </ol>\n    </>\n  );\n};\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp'\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}